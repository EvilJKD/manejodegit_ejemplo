Documento de prueba

Curso de Git y Github Profesional - Platzi.

Esta es una modificacion para commit.



Algunos comandos de Git:

-git init -> Para inicializar un repositorio en la presente carpeta. 
-git rm <archivo> -> Remover archivo del staging.
-git add <. o archivo>-> Para poner en 'stage' los documentos que quiero añadir al repositorio.
-git commit -m "<mensaje>" -> Para confirmar los cambios o los archivos nuevos dentro del repositorio.
-git status-> Ver el status de los archivos del repositorio.
-git log <archivo> -> Para evidenciar todos los commits de uin archivo.
-git show <archivo> -> Muestra los cambios de un archivo.
-git diff <numero de commit 1> <numero de commit 2> -> Muestra los cambios del primer commit, con el segundo commit. 
-git reset <numero de commit> <tipo> -> Regresar a alguna version antigua. Tipo puede ser --hard o --soft. Hard cambia todo, soft permite tener los cambios en stage. 
-git checkout <numero de commit> <archivo> -> Sirve para ver una version antigua. Para regresar a la versión actual, el número de commit va a ser "master".
-git commit -am -> Para hacer el add y commit sobre los archivos existentes modifiicados
-git branch <nombre-branch> -> Para crear una branch desde donde estamos. Si no se pone un branch, devuelve una lista con los branches.
-git merge <nombre-branch> -> Une la branch indicada con la branch en la que estamos.
-git log --all --graph --decorate --oneline -> Para evidenciar un grafo con los diferentes commits. 
-git tag -a <titulo> -m "<descripcion>"  -> Para crear tags dentro de Git, utilizado en la creacion de versiones.
-git tag -d <titulo>  -> Para eliminar el tag especificado pero no lo borra de Github
-git push origin :refs/tags/<titulo>  -> Para eliminar el tag especificado de Github
-git tag -> Se muestran todos los tags existentes
-git show-ref --tags  -> Para mostrar los tags y el hash al que hacen referencia

Remotos
-git remote add origin <https> -> Para agregar un origen remoto.
-git remote -> Verificar que existe un origen remoto.
-git remote -v -> Muestra los origenes de fetch y push.
-git push origin <rama-origen> -> Enviar los cambios al repo remoto.
-git pull origin <rama-destino> -> Recibir los cambios al repo local. Para permitir unrelated histories se agrega --allow-unrelated-histories



Llaves SSH
Para crear, se utiliza el comando:
ssh-keygen -t rsa -b 4096 -C "email@email.com"
Para evaluar que el servicio ssh funcione:
eval $(ssh-agent -s)
PAra agregar al servidor
ssh-add ~.ssh/id_rsa
Para cambiar los valores de un repositorio remoto
git remote set-url <origin> <url/direccion>

Notas:
Cuando se hace un commit sin mensaje, sale una ventana en consola donde se pide que se ingrese. Si la ventana es de VIM: Para salir de esta ventana, se pulsa <esc + i>, se ingresa un mensaje y se pulsa <esc + shift + z + z>(esto fuerza el envío del commit). Si la ventana es VSCode: Se ingresa el mensaje en el archivo que apareció, se guarda y se cierra la ventana.


Branches:
La rama se crea desde donde estamos. 
El merge es un commit, por lo que incluye un mensaje.
